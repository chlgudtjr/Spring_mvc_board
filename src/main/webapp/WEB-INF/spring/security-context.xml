<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<s:http auto-config="true" use-expressions="true">
		<!-- 제한은 좁은데서 큰쪽으로와야 좁은 권한부터 체크한다 
		(큰데서 좁은데 오면 밑에는 안먹힘 예를 들어 Exception처럼 에러 조상님 선언하면 밑에 하위에러 처리해도 안먹는것처럼) -->
		<s:intercept-url pattern="/login" access="permitAll" />
		<s:intercept-url pattern="/member/**" access="hasAnyAuthority('MEMBER','ADMIN')" />
		<s:intercept-url pattern="/admin/**" access="hasAuthority('ADMIN')" />
		<s:intercept-url pattern="/**" access="permitAll"/>

			
		<s:form-login login-page="/login"
		username-parameter="m_id" 
		password-parameter="m_pw" 
		authentication-success-handler-ref="userLoginSuccessHandler" 
		authentication-failure-handler-ref="userLoginFailHandler"
		/>
     
		<s:logout logout-url="/logout" logout-success-url="/login" invalidate-session="true" /> 
		
		<!-- 403 에러처리 -->
		<!-- 인증값과 권한값이 매칭이 안될경우 발생시킨다 -->
		<access-denied-handler error-page="/accessDenied"/>
	</s:http>

	  <!-- UserDetailsService 설정  -->
  	  <beans:bean id="memberDetailsService" class="edu.bit.ex.board.auth.MemberDetailsService" />
   
      <!-- UserLoginProvider 설정  -->
      <beans:bean id="userLoginAuthenticationProvider" class="edu.bit.ex.board.auth.UserLoginAuthenticationProvider" />
    
     <!-- 암호화 처리를 한 패스워드인코더 -->
     <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
     
     <!-- 로그인 실패 대응 로직 -->
     <beans:bean id="userLoginFailHandler" class="edu.bit.ex.board.auth.UserLoginFailHandler" />
     
      <!-- 로그인 성공 대응 로직 -->
     <beans:bean id="userLoginSuccessHandler" class="edu.bit.ex.board.auth.UserLoginSuccessHandler" />
   		
	 <!-- provider -->
     <!-- DB에서 설정한 쿼리문으로 필요한 데이터들을 불러온다 --> 
     <s:authentication-manager>
   	   <s:authentication-provider ref="userLoginAuthenticationProvider" />
       <s:authentication-provider user-service-ref="memberDetailsService">
      	 <!-- 패스워드 인코딩을 설정한다 -->
       	 <!-- bcrypt는 단방향 인코딩이므로 디코딩을 할 수 없어서 암호화한채로 계정을 비교한다 -->
      	 <s:password-encoder ref="bcryptPasswordEncoder"/>
       </s:authentication-provider>
     </s:authentication-manager>

</beans:beans>